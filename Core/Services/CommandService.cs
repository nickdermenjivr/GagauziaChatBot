using Telegram.Bot;
using Telegram.Bot.Types;
using Telegram.Bot.Types.Enums;
using Telegram.Bot.Types.ReplyMarkups;

namespace GagauziaChatBot.Core.Services;

public class CommandService(ITelegramBotClient botClient) : ICommandService
{
    
    public async Task HandleCommand(Message message, CancellationToken cancellationToken)
    {
        if (message.Text == null) return;

        switch (message.Text)
        {
            case "/start":
                await ShowStartMenu(message.Chat.Id, cancellationToken);
                break;

            case "/menu":
            case "üìã –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
                await ShowMainMenu(message.Chat.Id, cancellationToken);
                break;

            case "/help":
            case "‚ÑπÔ∏è –ü–æ–º–æ—â—å":
                await ShowHelpMenu(message.Chat.Id, cancellationToken);
                break;
        }
    }

    private async Task ShowStartMenu(long chatId, CancellationToken cancellationToken)
    {
        var keyboard = new ReplyKeyboardMarkup(new[]
        {
            [new KeyboardButton("üìã –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")],
            new[] { new KeyboardButton("‚ÑπÔ∏è –ü–æ–º–æ—â—å") }
        })
        {
            ResizeKeyboard = true,
            OneTimeKeyboard = false
        };

        await botClient.SendMessage(
            chatId: chatId,
            text: "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!\n\n–Ø –≤–∞—à –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫.",
            replyMarkup: keyboard,
            parseMode: ParseMode.Html,
            cancellationToken: cancellationToken
        );
    }

    private async Task ShowMainMenu(long chatId, CancellationToken cancellationToken)
    {
        var keyboard = new ReplyKeyboardMarkup(new[]
        {
            [new KeyboardButton("üìã –ö–∞—Ç–∞–ª–æ–≥"), new KeyboardButton("üõí –ö–æ—Ä–∑–∏–Ω–∞")],
            [new KeyboardButton("üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã"), new KeyboardButton("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏")],
            new[] { new KeyboardButton("‚ÑπÔ∏è –ü–æ–º–æ—â—å") }
        })
        {
            ResizeKeyboard = true,
            OneTimeKeyboard = false
        };

        await botClient.SendMessage(
            chatId: chatId,
            text: "<b>üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª:",
            replyMarkup: keyboard,
            parseMode: ParseMode.Html,
            cancellationToken: cancellationToken
        );
    }
    private async Task ShowHelpMenu(long chatId, CancellationToken cancellationToken)
    {
        var keyboard = new ReplyKeyboardMarkup(new[]
        {
            new[] { new KeyboardButton("üìã –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é") }
        })
        {
            ResizeKeyboard = true,
            OneTimeKeyboard = false
        };

        await botClient.SendMessage(
            chatId: chatId,
            text: "üìå –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n\n" +
                  "/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É\n" +
                  "/menu - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n" +
                  "/help - –ü–æ–º–æ—â—å",
            replyMarkup: keyboard,
            cancellationToken: cancellationToken
        );
    }
}